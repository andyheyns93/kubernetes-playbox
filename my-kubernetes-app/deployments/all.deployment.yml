apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubernetes-app-backend
  labels:
    app: my-kubernetes-app
    tier: backend
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: my-kubernetes-app
      tier: backend
  template:
    metadata:
      labels:
        app: my-kubernetes-app
        tier: backend
    spec:
      containers:
      - name: my-kubernetes-app-backend
        image: andyheyns93/kub-api:0.1
        #imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubernetes-app-frontend
  labels:
    app: my-kubernetes-app
    tier: frontend
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: my-kubernetes-app
      tier: frontend
  template:
    metadata:
      labels:
        app: my-kubernetes-app
        tier: frontend
    spec:
      containers:
      - name: my-kubernetes-app-frontend
        image: andyheyns93/kub-app:0.1
        #imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: my-kubernetes-app-load-balancer-backend
spec:
  type: LoadBalancer
  selector:
    app: my-kubernetes-app
    tier: backend
  ports:
    - port: 8080
      targetPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: my-kubernetes-app-load-balancer-frontend
spec:
  type: LoadBalancer
  selector:
    app: my-kubernetes-app
    tier: frontend
  ports:
    - port: 4200
      targetPort: 80